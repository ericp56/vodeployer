
package com.voiceobjects.webservices;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WSProviderPortType", targetNamespace = "http://webservices.voiceobjects.com")
@SOAPBinding(style = SOAPBinding.Style.RPC)
public interface WSProviderPortType {


    /**
     * 
     * @param userDef
     * @param sessionID
     * @param overwrite
     * @param isURI
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String createUser(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "userDef", partName = "userDef")
        String userDef,
        @WebParam(name = "overwrite", partName = "overwrite")
        boolean overwrite,
        @WebParam(name = "isURI", partName = "isURI")
        boolean isURI);

    /**
     * 
     * @param reportType
     * @param vsn
     * @param serverRefID
     * @param sessionID
     * @param time
     * @param serverInstanceName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getServerStatistics(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "reportType", partName = "reportType")
        String reportType,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "serverInstanceName", partName = "serverInstanceName")
        String serverInstanceName,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn,
        @WebParam(name = "time", partName = "time")
        String time);

    /**
     * 
     * @param sessionID
     * @param userID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getUserDef(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "userID", partName = "userID")
        String userID);

    /**
     * 
     * @param vsn
     * @param serverRefID
     * @param sessionID
     * @param logSettings
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String setDBLoggingService(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn,
        @WebParam(name = "logSettings", partName = "logSettings")
        String logSettings);

    /**
     * 
     * @param targetCounter
     * @param targetUserName
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String killUserSession(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "targetUserName", partName = "targetUserName")
        String targetUserName,
        @WebParam(name = "targetCounter", partName = "targetCounter")
        String targetCounter);

    /**
     * 
     * @param serverRefID
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String deleteServer(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID);

    /**
     * 
     * @param sessionID
     * @param projectName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String upgradeProject(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName);

    /**
     * 
     * @param serverDef
     * @param sessionID
     * @param overwrite
     * @param isURI
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String createServer(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverDef", partName = "serverDef")
        String serverDef,
        @WebParam(name = "overwrite", partName = "overwrite")
        boolean overwrite,
        @WebParam(name = "isURI", partName = "isURI")
        boolean isURI);

    /**
     * 
     * @param sessionID
     * @param startLevel
     * @param projectName
     * @param versionName
     * @param objectRefID
     * @param endLevel
     * @param objectType
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getDialogFlow(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName,
        @WebParam(name = "objectRefID", partName = "objectRefID")
        String objectRefID,
        @WebParam(name = "objectType", partName = "objectType")
        String objectType,
        @WebParam(name = "startLevel", partName = "startLevel")
        String startLevel,
        @WebParam(name = "endLevel", partName = "endLevel")
        String endLevel);

    /**
     * 
     * @param serverRefID
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String startServer(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID);

    /**
     * 
     * @param channels
     * @param keys
     * @param limit
     * @param sessionID
     * @param services
     * @param customer
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getContextCookies(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "services", partName = "services")
        String services,
        @WebParam(name = "customer", partName = "customer")
        String customer,
        @WebParam(name = "channels", partName = "channels")
        String channels,
        @WebParam(name = "keys", partName = "keys")
        String keys,
        @WebParam(name = "limit", partName = "limit")
        int limit);

    /**
     * 
     * @param objectDef
     * @param sessionID
     * @param projectName
     * @param versionName
     * @param objectRefID
     * @param isURI
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String modifyObject(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName,
        @WebParam(name = "objectRefID", partName = "objectRefID")
        String objectRefID,
        @WebParam(name = "objectDef", partName = "objectDef")
        String objectDef,
        @WebParam(name = "isURI", partName = "isURI")
        boolean isURI);

    /**
     * 
     * @param vsn
     * @param serverRefID
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String undeployService(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn);

    /**
     * 
     * @param channels
     * @param keys
     * @param sessionID
     * @param services
     * @param customer
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String deleteContextCookies(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "services", partName = "services")
        String services,
        @WebParam(name = "customer", partName = "customer")
        String customer,
        @WebParam(name = "channels", partName = "channels")
        String channels,
        @WebParam(name = "keys", partName = "keys")
        String keys);

    /**
     * 
     * @param vsn
     * @param serverRefID
     * @param sessionID
     * @param fullDetails
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getBUIConfigurationSet(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn,
        @WebParam(name = "fullDetails", partName = "fullDetails")
        boolean fullDetails);

    /**
     * 
     * @param vsn
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String deleteService(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn);

    /**
     * 
     * @param serverRefID
     * @param sessionID
     * @param fileType
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getFileList(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "fileType", partName = "fileType")
        String fileType);

    /**
     * 
     * @param vsn
     * @param serverRefID
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String restoreService(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn);

    /**
     * 
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String logOut(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID);

    /**
     * 
     * @param serverRefID
     * @param sessionID
     * @param traceEnabled
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String setTracingServer(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "traceEnabled", partName = "traceEnabled")
        boolean traceEnabled);

    /**
     * 
     * @param oldPassword
     * @param newPassword
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String changePassword(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "oldPassword", partName = "oldPassword")
        String oldPassword,
        @WebParam(name = "newPassword", partName = "newPassword")
        String newPassword);

    /**
     * 
     * @param serverRefID
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String idleServer(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID);

    /**
     * 
     * @param vsn
     * @param serverRefID
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String resumeService(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn);

    /**
     * 
     * @param vsn
     * @param serverRefID
     * @param sessionID
     * @param config
     * @param referenceID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String addBUIConfiguration(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn,
        @WebParam(name = "referenceID", partName = "referenceID")
        String referenceID,
        @WebParam(name = "config", partName = "config")
        String config);

    /**
     * 
     * @param vsn
     * @param serverRefID
     * @param sessionID
     * @param referenceID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getBUIConfiguration(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn,
        @WebParam(name = "referenceID", partName = "referenceID")
        String referenceID);

    /**
     * 
     * @param projectDef
     * @param sessionID
     * @param projectName
     * @param isURI
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String modifyProject(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "projectDef", partName = "projectDef")
        String projectDef,
        @WebParam(name = "isURI", partName = "isURI")
        boolean isURI);

    /**
     * 
     * @param serverRefID
     * @param sessionID
     * @param serverInstanceName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String startInstance(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "serverInstanceName", partName = "serverInstanceName")
        String serverInstanceName);

    /**
     * 
     * @param serverRefID
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String resetServer(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID);

    /**
     * 
     * @param createEmpty
     * @param newVersionName
     * @param sessionID
     * @param projectName
     * @param versionName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String publishProjectVersion(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName,
        @WebParam(name = "newVersionName", partName = "newVersionName")
        String newVersionName,
        @WebParam(name = "createEmpty", partName = "createEmpty")
        boolean createEmpty);

    /**
     * 
     * @param licenseType
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getLicense(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "licenseType", partName = "licenseType")
        String licenseType);

    /**
     * 
     * @param sessionID
     * @param projectName
     * @param versionName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getBUIObjects(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName);

    /**
     * 
     * @param limit
     * @param sessionID
     * @param customer
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getCustomerServiceList(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "customer", partName = "customer")
        String customer,
        @WebParam(name = "limit", partName = "limit")
        int limit);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String ping();

    /**
     * 
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getServerList(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID);

    /**
     * 
     * @param vsn
     * @param serverRefID
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String startService(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn);

    /**
     * 
     * @param libraryName
     * @param sessionID
     * @param projectName
     * @param versionName
     * @param libraryVersionName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String attachLibraryToVersion(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName,
        @WebParam(name = "libraryName", partName = "libraryName")
        String libraryName,
        @WebParam(name = "libraryVersionName", partName = "libraryVersionName")
        String libraryVersionName);

    /**
     * 
     * @param sessionID
     * @param projectName
     * @param versionName
     * @param objectRefID
     * @param objectType
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String lockObject(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "objectType", partName = "objectType")
        String objectType,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName,
        @WebParam(name = "objectRefID", partName = "objectRefID")
        String objectRefID);

    /**
     * 
     * @param vsn
     * @param serverRefID
     * @param serviceDef
     * @param templateName
     * @param sessionID
     * @param projectName
     * @param versionName
     * @param isURI
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String deployProjectVersion(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn,
        @WebParam(name = "serviceDef", partName = "serviceDef")
        String serviceDef,
        @WebParam(name = "isURI", partName = "isURI")
        boolean isURI,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName,
        @WebParam(name = "templateName", partName = "templateName")
        String templateName);

    /**
     * 
     * @param sessionID
     * @param message
     * @param granted
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String writeAuditTrail(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "message", partName = "message")
        String message,
        @WebParam(name = "granted", partName = "granted")
        boolean granted);

    /**
     * 
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String pingSession(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID);

    /**
     * 
     * @param serviceDef
     * @param sessionID
     * @param overwrite
     * @param isURI
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String createService(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serviceDef", partName = "serviceDef")
        String serviceDef,
        @WebParam(name = "overwrite", partName = "overwrite")
        boolean overwrite,
        @WebParam(name = "isURI", partName = "isURI")
        boolean isURI);

    /**
     * 
     * @param channels
     * @param limit
     * @param sessionID
     * @param services
     * @param key
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getContextCookiesCustomers(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "services", partName = "services")
        String services,
        @WebParam(name = "channels", partName = "channels")
        String channels,
        @WebParam(name = "key", partName = "key")
        String key,
        @WebParam(name = "limit", partName = "limit")
        int limit);

    /**
     * 
     * @param serverRefID
     * @param sessionID
     * @param serverInstanceName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String idleInstance(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "serverInstanceName", partName = "serverInstanceName")
        String serverInstanceName);

    /**
     * 
     * @param sessionID
     * @param projectName
     * @param versionName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getProjectVersionDef(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName);

    /**
     * 
     * @param annotation
     * @param sessionID
     * @param projectName
     * @param versionName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String addReviewerAnnotation(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName,
        @WebParam(name = "annotation", partName = "annotation")
        String annotation);

    /**
     * 
     * @param sessionID
     * @param projectName
     * @param versionName
     * @param objectRefID
     * @param objectType
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getObjectDefinition(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName,
        @WebParam(name = "objectRefID", partName = "objectRefID")
        String objectRefID,
        @WebParam(name = "objectType", partName = "objectType")
        String objectType);

    /**
     * 
     * @param reportType
     * @param vsn
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getUsageData(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "reportType", partName = "reportType")
        String reportType,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn);

    /**
     * 
     * @param serverRefID
     * @param serviceDef
     * @param sessionID
     * @param isURI
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String deployXDKService(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "serviceDef", partName = "serviceDef")
        String serviceDef,
        @WebParam(name = "isURI", partName = "isURI")
        boolean isURI);

    /**
     * 
     * @param serverRefID
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String stopServer(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID);

    /**
     * 
     * @param serverRefID
     * @param aggregateData
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String queryServer(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "aggregateData", partName = "aggregateData")
        boolean aggregateData);

    /**
     * 
     * @param channels
     * @param keys
     * @param sessionID
     * @param services
     * @param value
     * @param customer
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String saveContextCookie(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "services", partName = "services")
        String services,
        @WebParam(name = "customer", partName = "customer")
        String customer,
        @WebParam(name = "channels", partName = "channels")
        String channels,
        @WebParam(name = "keys", partName = "keys")
        String keys,
        @WebParam(name = "value", partName = "value")
        String value);

    /**
     * 
     * @param vsn
     * @param serverRefID
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String stopService(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn);

    /**
     * 
     * @param libraryName
     * @param sessionID
     * @param projectName
     * @param versionName
     * @param libraryVersionName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String removeLibraryFromVersion(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName,
        @WebParam(name = "libraryName", partName = "libraryName")
        String libraryName,
        @WebParam(name = "libraryVersionName", partName = "libraryVersionName")
        String libraryVersionName);

    /**
     * 
     * @param serverRefID
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getServerDef(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID);

    /**
     * 
     * @param vsn
     * @param sessionID
     * @param vsDef
     * @param isURI
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String modifyService(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn,
        @WebParam(name = "vsDef", partName = "vsDef")
        String vsDef,
        @WebParam(name = "isURI", partName = "isURI")
        boolean isURI);

    /**
     * 
     * @param sessionID
     * @param projectName
     * @param versionName
     * @param objectRefID
     * @param objectType
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String deleteObject(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName,
        @WebParam(name = "objectRefID", partName = "objectRefID")
        String objectRefID,
        @WebParam(name = "objectType", partName = "objectType")
        String objectType);

    /**
     * 
     * @param vsn
     * @param serverRefID
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String applyBUIConfiguration(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn);

    /**
     * 
     * @param vsn
     * @param serverRefID
     * @param sessionID
     * @param configSet
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String setBUIConfigurationSet(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn,
        @WebParam(name = "configSet", partName = "configSet")
        String configSet);

    /**
     * 
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getSessionList(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID);

    /**
     * 
     * @param applicationDef
     * @param sessionID
     * @param isURI
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String validateXDKApplication(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "applicationDef", partName = "applicationDef")
        String applicationDef,
        @WebParam(name = "isURI", partName = "isURI")
        boolean isURI);

    /**
     * 
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getSessionPartitioning(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID);

    /**
     * 
     * @param vsn
     * @param serverRefID
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getDeployedBUIObjects(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn);

    /**
     * 
     * @param serverRefID
     * @param instruments
     * @param numberOfValues
     * @param valueType
     * @param scale
     * @param interval
     * @param sessionID
     * @param serverInstanceName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getServerInstruments(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "serverInstanceName", partName = "serverInstanceName")
        String serverInstanceName,
        @WebParam(name = "instruments", partName = "instruments")
        String instruments,
        @WebParam(name = "interval", partName = "interval")
        String interval,
        @WebParam(name = "valueType", partName = "valueType")
        String valueType,
        @WebParam(name = "numberOfValues", partName = "numberOfValues")
        String numberOfValues,
        @WebParam(name = "scale", partName = "scale")
        String scale);

    /**
     * 
     * @param serverRefID
     * @param sessionID
     * @param serverInstanceName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String stopInstance(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "serverInstanceName", partName = "serverInstanceName")
        String serverInstanceName);

    /**
     * 
     * @param sessionID
     * @param projectName
     * @param versionName
     * @param objectType
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getObjectCount(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName,
        @WebParam(name = "objectType", partName = "objectType")
        String objectType);

    /**
     * 
     * @param sessionID
     * @param projectName
     * @param versionName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String deleteProjectVersion(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName);

    /**
     * 
     * @param serverRefID
     * @param fileName
     * @param instanceName
     * @param zipped
     * @param sessionID
     * @param fileType
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getFile(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "instanceName", partName = "instanceName")
        String instanceName,
        @WebParam(name = "fileName", partName = "fileName")
        String fileName,
        @WebParam(name = "fileType", partName = "fileType")
        String fileType,
        @WebParam(name = "zipped", partName = "zipped")
        boolean zipped);

    /**
     * 
     * @param sessionID
     * @param projectName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getProjectDef(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName);

    /**
     * 
     * @param limit
     * @param sessionID
     * @param customer
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getCustomerChannelList(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "customer", partName = "customer")
        String customer,
        @WebParam(name = "limit", partName = "limit")
        int limit);

    /**
     * 
     * @param serverRefID
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String resumeServer(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID);

    /**
     * 
     * @param serverRefID
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String reloadServiceList(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID);

    /**
     * 
     * @param objectDef
     * @param generateNewGuids
     * @param overwriteByName
     * @param sessionID
     * @param projectName
     * @param versionName
     * @param isURI
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String importObject(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName,
        @WebParam(name = "generateNewGuids", partName = "generateNewGuids")
        boolean generateNewGuids,
        @WebParam(name = "overwriteByName", partName = "overwriteByName")
        boolean overwriteByName,
        @WebParam(name = "objectDef", partName = "objectDef")
        String objectDef,
        @WebParam(name = "isURI", partName = "isURI")
        boolean isURI);

    /**
     * 
     * @param targetProjectName
     * @param sessionID
     * @param projectName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String copyProject(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "targetProjectName", partName = "targetProjectName")
        String targetProjectName);

    /**
     * 
     * @param sessionID
     * @param projectName
     * @param versionName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getUnusedObjectList(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName);

    /**
     * 
     * @param vsn
     * @param serverRefID
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String idleService(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn);

    /**
     * 
     * @param sessionID
     * @param userID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String deleteUser(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "userID", partName = "userID")
        String userID);

    /**
     * 
     * @param sessionID
     * @param projectName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String deleteProject(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName);

    /**
     * 
     * @param vsn
     * @param serverRefID
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String reloadServiceCache(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn);

    /**
     * 
     * @param vsn
     * @param serverRefID
     * @param instanceName
     * @param zipped
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getLatestTraceFile(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "instanceName", partName = "instanceName")
        String instanceName,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn,
        @WebParam(name = "zipped", partName = "zipped")
        boolean zipped);

    /**
     * 
     * @param licenseType
     * @param license
     * @param sessionID
     * @param overwrite
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String addLicense(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "licenseType", partName = "licenseType")
        String licenseType,
        @WebParam(name = "license", partName = "license")
        String license,
        @WebParam(name = "overwrite", partName = "overwrite")
        boolean overwrite);

    /**
     * 
     * @param vsn
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getServiceDef(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn);

    /**
     * 
     * @param serverRefID
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String shutdownServer(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID);

    /**
     * 
     * @param sessionID
     * @param projectName
     * @param versionName
     * @param userID
     * @param objectRefID
     * @param objectType
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String addUserToACL(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName,
        @WebParam(name = "userID", partName = "userID")
        String userID,
        @WebParam(name = "objectRefID", partName = "objectRefID")
        String objectRefID,
        @WebParam(name = "objectType", partName = "objectType")
        String objectType);

    /**
     * 
     * @param serverRefID
     * @param sessionID
     * @param logSettings
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String setDBLoggingServer(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "logSettings", partName = "logSettings")
        String logSettings);

    /**
     * 
     * @param serverRefID
     * @param adapter
     * @param adapterService
     * @param sessionID
     * @param serverInstanceName
     * @param tableName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String stopIMProxyAdapter(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "serverInstanceName", partName = "serverInstanceName")
        String serverInstanceName,
        @WebParam(name = "adapter", partName = "adapter")
        String adapter,
        @WebParam(name = "adapterService", partName = "adapterService")
        String adapterService,
        @WebParam(name = "tableName", partName = "tableName")
        String tableName);

    /**
     * 
     * @param vsn
     * @param serverRefID
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String addServiceToServer(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn);

    /**
     * 
     * @param sessionID
     * @param projectName
     * @param versionName
     * @param objectRefID
     * @param objectType
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String unlockObject(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "objectType", partName = "objectType")
        String objectType,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName,
        @WebParam(name = "objectRefID", partName = "objectRefID")
        String objectRefID);

    /**
     * 
     * @param projectDef
     * @param sessionID
     * @param overwrite
     * @param isURI
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String createProject(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectDef", partName = "projectDef")
        String projectDef,
        @WebParam(name = "overwrite", partName = "overwrite")
        boolean overwrite,
        @WebParam(name = "isURI", partName = "isURI")
        boolean isURI);

    /**
     * 
     * @param zipped
     * @param format
     * @param sessionID
     * @param projectName
     * @param versionName
     * @param exportLib
     * @param objectRefID
     * @param objectType
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String exportObject(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName,
        @WebParam(name = "objectRefID", partName = "objectRefID")
        String objectRefID,
        @WebParam(name = "objectType", partName = "objectType")
        String objectType,
        @WebParam(name = "format", partName = "format")
        String format,
        @WebParam(name = "zipped", partName = "zipped")
        boolean zipped,
        @WebParam(name = "exportLib", partName = "exportLib")
        boolean exportLib);

    /**
     * 
     * @param vsn
     * @param serverRefID
     * @param restrictANI
     * @param sessionID
     * @param traceEnabled
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String setTracingService(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn,
        @WebParam(name = "restrictANI", partName = "restrictANI")
        String restrictANI,
        @WebParam(name = "traceEnabled", partName = "traceEnabled")
        String traceEnabled);

    /**
     * 
     * @param searchCondition
     * @param sessionID
     * @param projectName
     * @param versionName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String searchObjects(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName,
        @WebParam(name = "searchCondition", partName = "searchCondition")
        String searchCondition);

    /**
     * 
     * @param restrictedObjectType
     * @param sessionID
     * @param projectName
     * @param versionName
     * @param objectRefID
     * @param objectType
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getParentObjectList(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName,
        @WebParam(name = "objectType", partName = "objectType")
        String objectType,
        @WebParam(name = "objectRefID", partName = "objectRefID")
        String objectRefID,
        @WebParam(name = "restrictedObjectType", partName = "restrictedObjectType")
        String restrictedObjectType);

    /**
     * 
     * @param serverRefID
     * @param adapter
     * @param adapterService
     * @param sessionID
     * @param serverInstanceName
     * @param tableName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String startIMProxyAdapter(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "serverInstanceName", partName = "serverInstanceName")
        String serverInstanceName,
        @WebParam(name = "adapter", partName = "adapter")
        String adapter,
        @WebParam(name = "adapterService", partName = "adapterService")
        String adapterService,
        @WebParam(name = "tableName", partName = "tableName")
        String tableName);

    /**
     * 
     * @param userDef
     * @param sessionID
     * @param userID
     * @param isURI
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String modifyUser(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "userID", partName = "userID")
        String userID,
        @WebParam(name = "userDef", partName = "userDef")
        String userDef,
        @WebParam(name = "isURI", partName = "isURI")
        boolean isURI);

    /**
     * 
     * @param vsn
     * @param serverRefID
     * @param startObjectRefID
     * @param applicationDefinition
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String redeployXDKApplication(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn,
        @WebParam(name = "startObjectRefID", partName = "startObjectRefID")
        String startObjectRefID,
        @WebParam(name = "applicationDefinition", partName = "applicationDefinition")
        String applicationDefinition);

    /**
     * 
     * @param restrictedObjectType
     * @param sessionID
     * @param projectName
     * @param versionName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getLockedObjectList(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName,
        @WebParam(name = "restrictedObjectType", partName = "restrictedObjectType")
        String restrictedObjectType);

    /**
     * 
     * @param objectDef
     * @param overwriteStartObject
     * @param generateNewGuids
     * @param overwriteByName
     * @param sessionID
     * @param projectName
     * @param versionName
     * @param isURI
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String importObjectWithStartObject(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName,
        @WebParam(name = "generateNewGuids", partName = "generateNewGuids")
        boolean generateNewGuids,
        @WebParam(name = "overwriteByName", partName = "overwriteByName")
        boolean overwriteByName,
        @WebParam(name = "overwriteStartObject", partName = "overwriteStartObject")
        boolean overwriteStartObject,
        @WebParam(name = "objectDef", partName = "objectDef")
        String objectDef,
        @WebParam(name = "isURI", partName = "isURI")
        boolean isURI);

    /**
     * 
     * @param serverRefID
     * @param sessionID
     * @param serverInstanceName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String resumeInstance(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "serverInstanceName", partName = "serverInstanceName")
        String serverInstanceName);

    /**
     * 
     * @param vsn
     * @param serverRefID
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String redeployService(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn);

    /**
     * 
     * @param serverRefID
     * @param instanceName
     * @param sessionID
     * @param fileNames
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String deleteTraceFile(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "instanceName", partName = "instanceName")
        String instanceName,
        @WebParam(name = "fileNames", partName = "fileNames")
        String fileNames);

    /**
     * 
     * @param vsn
     * @param serverRefID
     * @param sessionID
     * @param message
     * @param referenceID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String activateBUIConfiguration(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn,
        @WebParam(name = "referenceID", partName = "referenceID")
        String referenceID,
        @WebParam(name = "message", partName = "message")
        String message);

    /**
     * 
     * @param sessionID
     * @param url
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getBUIConfigurationSetActiveForResource(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "url", partName = "url")
        String url);

    /**
     * 
     * @param vsn
     * @param serverRefID
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String removeServiceFromServer(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn);

    /**
     * 
     * @param templateName
     * @param sessionID
     * @param projectName
     * @param versionName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String createProjectVersionFromTemplate(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName,
        @WebParam(name = "templateName", partName = "templateName")
        String templateName);

    /**
     * 
     * @param password
     * @param siteID
     * @param language
     * @param userID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String logIn(
        @WebParam(name = "userID", partName = "userID")
        String userID,
        @WebParam(name = "siteID", partName = "siteID")
        String siteID,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "language", partName = "language")
        String language);

    /**
     * 
     * @param sessionID
     * @param projectName
     * @param versionName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getReviewerAnnotation(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName);

    /**
     * 
     * @param channel
     * @param sessionID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getTemplates(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "channel", partName = "channel")
        String channel);

    /**
     * 
     * @param vsn
     * @param serverRefID
     * @param sessionID
     * @param config
     * @param referenceID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String modifyBUIConfiguration(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn,
        @WebParam(name = "referenceID", partName = "referenceID")
        String referenceID,
        @WebParam(name = "config", partName = "config")
        String config);

    /**
     * 
     * @param zipped
     * @param format
     * @param sessionID
     * @param projectName
     * @param versionName
     * @param exportLib
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String exportProjectVersion(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName,
        @WebParam(name = "format", partName = "format")
        String format,
        @WebParam(name = "zipped", partName = "zipped")
        boolean zipped,
        @WebParam(name = "exportLib", partName = "exportLib")
        boolean exportLib);

    /**
     * 
     * @param sessionID
     * @param projectName
     * @param versionName
     * @param objectType
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String getObjectList(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName,
        @WebParam(name = "objectType", partName = "objectType")
        String objectType);

    /**
     * 
     * @param serverRefID
     * @param serverDef
     * @param sessionID
     * @param isURI
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String modifyServer(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "serverDef", partName = "serverDef")
        String serverDef,
        @WebParam(name = "isURI", partName = "isURI")
        boolean isURI);

    /**
     * 
     * @param sessionID
     * @param projectName
     * @param versionName
     * @param userID
     * @param objectRefID
     * @param objectType
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String removeUserFromACL(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName,
        @WebParam(name = "userID", partName = "userID")
        String userID,
        @WebParam(name = "objectRefID", partName = "objectRefID")
        String objectRefID,
        @WebParam(name = "objectType", partName = "objectType")
        String objectType);

    /**
     * 
     * @param vsn
     * @param serverRefID
     * @param sessionID
     * @param referenceID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String removeBUIConfiguration(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "serverRefID", partName = "serverRefID")
        String serverRefID,
        @WebParam(name = "vsn", partName = "vsn")
        String vsn,
        @WebParam(name = "referenceID", partName = "referenceID")
        String referenceID);

    /**
     * 
     * @param versionDef
     * @param sessionID
     * @param projectName
     * @param versionName
     * @param isURI
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", partName = "out")
    public String modifyProjectVersion(
        @WebParam(name = "sessionID", partName = "sessionID")
        String sessionID,
        @WebParam(name = "projectName", partName = "projectName")
        String projectName,
        @WebParam(name = "versionName", partName = "versionName")
        String versionName,
        @WebParam(name = "versionDef", partName = "versionDef")
        String versionDef,
        @WebParam(name = "isURI", partName = "isURI")
        boolean isURI);

}
